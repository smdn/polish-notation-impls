/*
SPDX-FileCopyrightText: 2022 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
*/
:root {
  --expressiontree-text-color: rgb(24, 24, 24);
  --expressiontree-node-border-color: midnightblue;
  --expressiontree-node-fill-color: powderblue;
  --expressiontree-node-text-color: var(--expressiontree-text-color);
}

@media screen and (prefers-color-scheme: dark) {
  :root {
    --expressiontree-text-color: rgb(224, 224, 224);
    --expressiontree-node-border-color: rgb(160, 160, 160);
    --expressiontree-node-fill-color: rgb(48, 48, 48);
  }
}

.expressiontree {
  shape-rendering: geometricPrecision;
}

.expressiontree-node-body {
  fill: var(--expressiontree-node-fill-color);
  stroke: var(--expressiontree-node-border-color);
}

.expressiontree-node-label {
  font-size: 100%;
  font-family: monospace;
  stroke: none;
  fill: var(--expressiontree-node-text-color);
}

.expressiontree-branch {
  stroke: var(--expressiontree-node-border-color);
}

.expressiontree-branch,
.expressiontree-node-body {
  stroke-width: 2.5px;
}

.expressiontree-subtree-bound {
  fill: transparent;
  stroke: transparent;
}

.expressiontree-subtree-label,
.expressiontree-subtree-label-static {
  font-size: 75%;
  stroke: none;
  fill: transparent;
}

.expressiontree-subtree-bound,
.expressiontree-subtree-label {
  transition: 50ms;
  transition-timing-function: ease-in-out;
}

.expressiontree-subtree-bound:hover,
.expressiontree-subtree-bound-static {
  fill: lightskyblue;
  opacity: 0.4;
}

.expressiontree-subtree-bound:hover ~ .expressiontree-subtree-label,
.expressiontree-subtree-label-static {
  fill: var(--expressiontree-text-color);
}

.expressiontree-traversalorder-path,
.expressiontree-traversalorder-path-marker {
  stroke: crimson;
  stroke-width: 1.5px;
  fill: crimson;
}

.expressiontree-traversalorder-path {
  fill: none;
}

.expressiontree-traversalorder-order {
  font-size: 75%;
}

.expressiontree-traversalorder-order-content-box,
.expressiontree-traversalorder-order-label-box {
  stroke: black;
  stroke-width: 1.5px;
}

.expressiontree-traversalorder-order-label {
  fill: black;
}

.expressiontree-traversalorder-order-label-box {
  fill: powderblue;
}

.expressiontree-traversalorder-order-content {
  fill: black;
}

.expressiontree-traversalorder-order-content-box {
  fill: white;
}

.expressiontree-calculation-subtreebound {
  fill: tomato;
  opacity: 0.4;
}

.expressiontree-calculation-subexpression {
  fill: var(--expressiontree-text-color);
  font-size: 75%;
}

.expressiontree-branch,
.expressiontree-node,
.expressiontree-subtree-label,
.expressiontree-traversalorder-order,
.expressiontree-traversalorder-order-content,
.expressiontree-traversalorder-order-content-box,
.expressiontree-traversalorder-order-label,
.expressiontree-traversalorder-order-label-box,
.expressiontree-traversalorder-path,
.expressiontree-traversalorder-nodemask,
.expressiontree-calculation-subtreebound,
.expressiontree-calculation-subexpression {
  pointer-events: none;
}

.expressiontree-subtree-label,
.expressiontree-traversalorder-order-content,
.expressiontree-traversalorder-order-label,
.expressiontree-calculation-subexpression {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
